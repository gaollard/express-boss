"use strict";var precacheConfig=[["/index.html","ca915d153797df285d7a2932f3fb3b59"],["/static/css/main.653da357.css","521def3ae35e5b12d25e0300c45174f2"],["/static/js/main.366f5a6b.js","937c52e6117d0a61d7503c6e651b80be"],["/static/media/LC_icon_message_line.07effa1d.svg","07effa1d6de6e928f3c77f159f5db16e"],["/static/media/avatar.f4dac9e6.jpg","f4dac9e62df6fe7d5ff0cb88132ea7f7"],["/static/media/bg.4cec8b3e.png","4cec8b3ef340ce7078122a72ef0d0b4d"],["/static/media/bg.77302e05.jpg","77302e0563a8ec97c8d6f03ea40704a2"],["/static/media/boss-active.3b90bb63.svg","3b90bb6359ca5143ceedbd090467f359"],["/static/media/boss.744c30d7.svg","744c30d79a262f7b337024c753b54b1d"],["/static/media/firm.bd8b9e54.jpg","bd8b9e5494d9aea5f426625e3b1c2c1d"],["/static/media/genius-active.3b90bb63.svg","3b90bb6359ca5143ceedbd090467f359"],["/static/media/genius.744c30d7.svg","744c30d79a262f7b337024c753b54b1d"],["/static/media/home.0c3c3540.svg","0c3c35408ddb0689a7554772ad64d862"],["/static/media/logo.36ab849b.png","36ab849b7296feea2d2304ea1175f53d"],["/static/media/manage-active.a7d4b83e.svg","a7d4b83e7375ed7bfa7e49c4ed0990ba"],["/static/media/manage.09965ff0.svg","09965ff00a4aca073e794e1d5193ee02"],["/static/media/me-active.d3fe0aa7.svg","d3fe0aa72d78022cf8bd0ea2791a48a8"],["/static/media/me.d40d2b66.svg","d40d2b66eb2fab5fac550f32e126a411"],["/static/media/msg-active.824b6960.svg","824b6960600b90b57e0655dae7b3168a"],["/static/media/msg.61efbb99.svg","61efbb99e299a9f15ff7cd0646cc3c0f"],["/static/media/user.1c6bd706.svg","1c6bd706e4484037407aedf255cd16b9"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var c="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});